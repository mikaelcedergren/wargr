<!-- @include '/career/components/_career-header.kit' -->

<header>

    <h1><span>UX Directives</span> - A Simple Guide to how to Create Good UX</h1>
</header>

<section id="blog-post">

    <h3>The goal of UX is to avoid surprising the user and minimize frustration by preventing accidental clicks, inputs, or confusion. A well-designed interface doesn’t rely on support articles or a knowledge base — it guides the user as they go.</h3>

    <h3>A good interaction isn’t always logical, but it feels natural. It’s about the deep-rooted behavior buried in your subconscious — like reaching for a light switch in the same spot, even in a new room. You don’t think about it, you just expect it to be there.</h3>

    <h3>When something “just works”, it’s not about whether the system functions; it’s about whether it works as expected. And when it feels natural, people think less. That’s crucial in a world where we’re constantly overwhelmed with billboards, phone screens, notifications, conversations, apps, ads, messages from kids, partners, coworkers… the input never stops, and our brains are in survival mode, trying to filter out the noise.</h3>

    <h3>In short, good UX cuts through that noise by being clear, calm, and natural. So let’s jump into it.</h3>

    <h2>Everyone cares about UX</h2>
    <p>I’ve met some hardcore people saying that "UI isn’t for me, I don’t care about it," but whether you’re in a polished Adobe photo-processing product or straight into the terminal — you’re in a UI. Whether you like it or not.</p>
    <p>What do you think letters are? They're small pictures you've associated with meaning. When you sit in the terminal, the UI framing of the terminal is a user experience. The shortcuts you use are user experience. Even the letters themselves, building that beautiful code you're making — it’s all user experience.</p>
    <p>When you open the package of a new phone — the texture, the color. What does it feel like in your fingers? What does removing that plastic cover feel like? When you start it up — fast or slow — what's your perception? When you get a text and tap it, and it opens that message perfectly aligned with how conversations progress naturally — is that not user experience?</p>
    <p>So never tell me you don’t care about UX. You do. You just have a different preference.</p>

    <h2>The types of consuming information</h2>
    <p>We all have preferences for consuming information. Some of us are visual, relying on videos and pictures. Heck, I’m one of those. Then we have those who prefer text. On top of that, we’ve got personality types. Some people love sounds — they can replay a song just by hearing it once.</p>
    <p>Then there are the wild cards — aching to make a decision before they have enough information. That’s a trait of great leaders. And others absorb everything like a vacuum before deciding — but when they do, it’s always based on facts.</p>
    <p>I could go on for hours about the psychological consequences, but I won’t. I’ll focus on UX. Just remember this:</p>
    <p>Other people aren’t you.</p>
    <p>You’re probably reading this thinking I’m a raging lunatic. Well, you’re not the only one. I thought the same for years. Turns out, I just have a different skillset.</p>

    <h2>UX is what makes your work shine</h2>
    <p>The truth is, without a programmer, product manager, or similar roles, the application wouldn’t exist — making UX meaningless on its own. Building the product is the most important step. But UX is what lets everyone’s work shine.</p>
    <p>Think about Apple. Like it or not, it outperforms Alphabet (Google) in profitability. Everything Apple made iconic — tablets, touchscreens, laptops — already existed. They pride themselves on innovation, but that’s not their secret.</p>
    <p>About 30% of their success is marketing, but 70% is usability. Seventy percent. Let that sink in. This is a company that valued UX so much they didn’t even release MMS at launch because it wasn’t good enough.</p>
    <p>Here’s the point: If someone can’t use the product, there’s no product. UX should be part of the beginning and the end. It’s powerful. But it’s nothing without your colleagues.</p>

    <h2>Convention matters</h2>
    <p>Convention is what most people already know — established ways of interacting with elements.</p>
    <p>Your UI lives inside an OS UI, inside a browser UI, and is likely one of the least-used apps a user touches. People interact with Instagram, Facebook, macOS, Android, Windows, game UIs, microwaves — all in one day.</p>
    <p>So what they do matters — because that’s what users are used to. That’s why convention matters.</p>

    <h2>Usage of UX patterns</h2>
    <p>There’s no rule that always applies. UX patterns come from years of studying human behavior. As a kid, I questioned signage: Why is it a triangle? Why that border color? That icon? That height?</p>
    <p>Use patterns with intent — based on content, context, and consequences. Design isn’t about pretty colors and shapes. It’s about purpose.</p>

    <h2>Taking it all the way is important</h2>
    <p>A UX concept is built from many small ideas and micro-interactions. The details matter. If execution is sloppy, the whole thing loses impact — sometimes entirely.</p>

    <h2>Consistency above all</h2>
    <p>Consistency is key. Real consistency means predictable outcomes. This reduces cognitive load and builds trust. For developers, it means reusable patterns and fewer edge cases — increasing efficiency and improving UX-dev communication.</p>
    <p>Even a flawed input with consistent behavior is better than inconsistent ones. Once a pattern is approved, reuse it confidently.</p>

    <h2>When to require confirmation</h2>
    <p>Context matters. If a user enters data, don’t allow dismissing a dialog by clicking outside — that risks data loss and frustration. But for low-commitment actions (like viewing info or picking a color), easy dismissal is fine.</p>
    <p>Always reflect the context and consequences of user actions. Make communication visual, concise, and psychologically aligned — not structured by your backend logic.</p>
    <p>In short:</p>
    <ul>
        <li>High commitment (e.g., entered data) → Require explicit confirmation.</li>
        <li>Low commitment (e.g., selections, info) → Allow easy dismissal.</li>
    </ul>

    <h2>How to design good and effective UI</h2>
    <p>It’s easy to make a system complicated, hard to make it simple. The essence of design is to remove, remove, remove — until nothing more can be taken away without harming the experience.</p>

    <h2>Everything created by factor 4</h2>
    <p>Use spacing and sizing in multiples of 4: 4, 8, 12, 16, 24, 32, 64, etc. It ensures consistency, prevents subpixel issues, and helps developers spot inconsistencies.</p>

    <h2>Don’t get fancy</h2>
    <p>Stick to standard elements, font sizes, and colors. Don’t try to be clever. Follow the rules.</p>

    <h2>Order information and inputs logically</h2>
    <p>Arrange inputs and content top to bottom, left to right. Group related elements. Avoid making users jump around.</p>

    <h2>Check tab order</h2>
    <p>Ensure tabbing follows a logical top-to-bottom, left-to-right flow. Avoid skipping or trapping focus. It boosts usability, accessibility, and helps power users.</p>

    <h2>People don’t read — they scan</h2>
    <p>Users scan like they read newspapers. First impressions matter. If they can’t figure out a page in seconds, they leave or get frustrated.</p>

    <h2>The beauty of whitespace</h2>
    <p>Whitespace organizes content, reduces noise, and helps process information. It’s not empty — it’s structure. Just because you have pockets doesn’t mean you need to fill them.</p>

    <h2>Spacing indicates structure</h2>
    <p>Margins, padding, alignment — they help users understand layout. Clean spacing feels organized. Messy spacing feels chaotic. The Law of Proximity: Elements placed close are seen as related. Use layout to guide users — without needing to explain.</p>

    <h2>Typography</h2>
    <p>Use sentence case — capital letter first, then lowercase (except names/titles). Keep most text small or default size, with a few heading styles. Always optimize for legibility.</p>

    <h2>Inputs & buttons</h2>
    <p>Use familiar elements: checkboxes, radios, standard buttons. They signal expected behavior. Checkboxes = multi-select, radios = single-choice. Don’t reinvent standard patterns unless behavior matches exactly.</p>

    <h2>Buttons</h2>
    <p>Buttons show action — not state. Use other UI elements for state. Avoid vague labels like “Yes.” Label with the action, e.g., “Discard.” Feedback should go nearby, not on the button.</p>

    <h2>Feedback to the user</h2>
    <p>Never leave users guessing. Tell them what to do and what to expect — clearly and briefly. If your app confuses users on first open, they won’t come back.</p>

    <h2>Feedback should be communicated close to where it occurred</h2>
    <p>Show feedback near the triggering action. This uses the Law of Proximity — users naturally look there. For errors, guide them clearly. “Something’s wrong” is useless. “Couldn’t find your username — enter one that exists” helps.</p>

    <h2>Iconography</h2>
    <p>Icons should be meaningful and consistent. They must resemble their function. Like the 80s phone icon for calls — even people born after the 90s understand it. They were taught it.</p>

    <h2>Hover</h2>
    <p>Hover is one of the oldest conventions. If hover changes something, it must be interactive. Don’t use hover effects on static elements.</p>

    <h2>Errors</h2>
    <p>Show errors near the cause. Users are already focused there. This reduces confusion and speeds correction.</p>

    <h2>Context menus should contain all actions</h2>
    <p>If your app uses context menus, every row should have one. If no actions exist, show a disabled or empty state — don’t remove the menu. Keep it consistent.</p>

    <h2>Empty states are just as important as filled states</h2>
    <p>Use empty states to guide users. Don’t just show an empty table. Tell them *why* it’s empty and what to do next. Never leave them blank.</p>

    <h2>Science of Colours</h2>
    <p>You can’t pick colors by formula — perception depends on size, context, contrast, and hue. I once picked a perfect brown wall paint. On the wall, it wasn’t dark enough. So I chose a near-black shade with a sandy matte texture — it felt right.</p>
    <p>What color is grass? You might say “green” — but that’s only half true. Monet didn’t paint grass solid green. Grass reflects its surroundings — sky, light, shade. It’s green *with* hints of blue.</p>
    <p>Colors can’t be mathematically perfect — humans perceive differently. Even two identical hues behave differently based on background or usage. Design for perception, not math.</p>
    <p>Choose colors with intent — create balance and focus.</p>

    <h2>Accessibility is very important</h2>
    <p>Accessibility isn’t just blindness or wheelchairs. Think font size — some people just have weaker eyesight or refuse glasses. Design for real-world legibility.</p>
    <p>Color blindness affects 1 in 12 men, 1 in 200 women — 4.5% of people. For male audiences, it can be 8%. That’s 800 frustrated users per 10,000. They won’t push your product.</p>
    <p>That’s why UX uses iconography — not just for show, but to support color-blind users. Especially with green/red contrast, the most common issue.</p>
    <p>However, what needs to be remembered is that whatever disability you account for, you make the experience worse for someone else. So you need to draw a line in the sand of what's acceptable.</p>
    <p>In general, remember this: whatever you add, takes away from something else.</p>

    <h2>Conclusion</h2>
    <p>UX isn’t just about how things look — it’s how they work, how they feel, how they fit into real lives. It makes a tool feel natural. It makes users say, “This makes sense.”</p>
    <p>If you build a product, UX brings it to life. If you design one, UX earns trust. And if you care about what you make, UX is how you make it matter.</p>
    <p>Great UX is never an accident. It’s a mindset, a craft, and a commitment to clarity, simplicity, and empathy.</p>
    <p>Get it right, and your product doesn’t just function — it *feels* right.</p>
</section>
<!-- @include '/career/components/_career-footer.kit' -->